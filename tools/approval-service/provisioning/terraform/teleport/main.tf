variable "bot_name" {
  type        = string
  description = "Name of the bot"
  default     = "approval-service"
}

resource "random_password" "bot_token" {
  length  = 32
  special = false
}

resource "teleport_provision_token" "bot_example" {
  version = "v2"
  metadata = {
    description = "Bot join token for ${var.bot_name} generated by Terraform"

    name = random_password.bot_token.result
  }

  spec = {
    roles       = ["Bot"]
    bot_name    = var.bot_name
    join_method = "token"
  }
}

resource "teleport_role" "gha-build" {
    version = "v7"
    metadata = {
        name = "gha-build"
        description = "Role for GitHub Actions build"
    }

    spec = {}
}

resource "teleport_role" "gha-build-reviewer" {
    version = "v7"
    metadata = {
        name = "gha-build-reviewer"
        description = "Role for reviewers of GitHub Actions build"
    }

    spec = {
      allow = {
        review_requests = {
          roles = [teleport_role.gha-build.metadata.name]
        }
      }
    }
}

// Approval Service Bot role
// The bot role is intended to be used for impersonation, but there are issues with impersonated roles not being able to assume other roles.
resource "teleport_role" "approval_service" {
  version = "v7"
  metadata = {
    name        = var.bot_name
    description = "For Approval Service. Grants CRUD access to access_request resources."
  }

  spec = {
    allow = {
        rules = [{
          resources = ["access_request"]
            verbs     = ["read", "list", "create", "update"]
        }]
    }
  }
}

resource "teleport_bot" "approval_service" {
  name = var.bot_name
  roles = [teleport_role.approval_service.metadata.name]
}

output "bot_token" {
  value = teleport_provision_token.bot_example.metadata.name
  sensitive = true
}
